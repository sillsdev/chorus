name: "Build, Test and Pack"

on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: Event File
        path: ${{ github.event_path }}

  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      with:
        fetch-depth: 0 # fetch full history for GitVersion

    - name: Setup .NET
      uses: actions/setup-dotnet@c0d4ad69d8bd405d234f1c9166d383b7a4f69ed8 # v2.1.0
      with:
        dotnet-version: 6.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c Release

    # Unfortunately we need two test steps because we need different filters.
    # We could conditionally set an environment variable, but unfortunately
    # the syntax to access that is different on Windows vs Linux.
    - name: Test on Linux
      run: dotnet test --no-build -c Release --filter TestCategory!=RequiresUI -- NUnit.TestOutputXml=TestResults
      if: matrix.os == 'ubuntu-latest'

    - name: Test on Windows
      run: dotnet test --no-build -c Release --filter TestCategory!=SkipOnBuildServer -- NUnit.TestOutputXml=TestResults
      if: matrix.os == 'windows-latest'

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: Test Results (${{matrix.os}})
        path: "**/TestResults/*.xml"

    - name: Pack
      run: dotnet pack --no-restore --no-build -c Release

    - name: Upload Artifacts
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: chorus-dotnet-nugetpackage
        path: |
          output/*.nupkg
          output/*.snupkg
      if: matrix.os == 'ubuntu-latest'

  publish-nuget:
    name: "Publish NuGet package"
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push'
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      with:
        path: artifacts

    - name: Publish to Nuget
      run: dotnet nuget push artifacts/**/*.*nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.SILLSDEV_PUBLISH_NUGET_ORG}} --skip-duplicate
